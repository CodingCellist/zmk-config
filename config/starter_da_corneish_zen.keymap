/* vim: set ft=dts textwidth=0 nowrap :
 *
 * Based on the original layout by Darryl deHaan
 * Copyright (c) 2021 Darryl deHaan
 * SPDX-License-Identifier: MIT
 *
 * Modified by Thomas E. Hansen (CodingCellist)
 * Copyright (c) 2023 Thomas E. Hansen (CodingCellist)
 * SPDX-License-Identifier: MIT
 *
 */

#include <behaviors.dtsi>
#include "da.dtsi"
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS //

#define DEFAULT   0
#define LAYER_1   1
#define LAYER_2   2


// ZMK STUFF //

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};


/ {
        // NEXT and PREV are defined as tap-dances, with one (1) tap meaning
        // "next layer" and two (2) taps meaning "previous layer". This is
        // similar to how some music players do single-button operation.
        // N.B.: care must be taken to make sure the NEXT and PREV mappings go
        // to the right layers and that they wrap around at the top and bottom
        // layers respectively. Additionaly, one must be careful to reference
        // the right tap-dances in their respective layers.
        behaviors {
            // NEXT and PREV for default layer
            td0: tap_dance_0 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LAYER_0";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&to LAYER_1>, <&to LAYER_2>;
                    //         ^ NEXT         ^ PREV
            };

            // NEXT and PREV for layer 1
            td1: tap_dance_1 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LAYER_1";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&to LAYER_2>, <&to DEFAULT>;
                    //         ^ NEXT         ^ PREV
            };

            // NEXT and PREV for layer 2
            td2: tap_dance_2 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LAYER_2";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&to DEFAULT>, <&to 1>;
                    //         ^ NEXT         ^ PREV
            };

            // 1-tap for LSHIFT, 2-tap for LGUI (both can be modifiers)
            shft_gui: td_lshft_lgui {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LSHFT_LGUI";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LSHFT>, <&kp LGUI>;
            };

            // 1-tap for the number '1', 2-tap for F1
            n1_f1: td_n1_f1 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N1_F1";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N1>, <&kp F1>;
            };

            // 1-tap for the number '2', 2-tap for F2
            n2_f2: td_n2_f2 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N2_F2";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N2>, <&kp F2>;
            };

            // 1-tap for the number '3', 2-tap for F3
            n3_f3: td_n3_f3 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N3_F3";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N3>, <&kp F3>;
            };

            // 1-tap for the number '4', 2-tap for F4
            n4_f4: td_n4_f4 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N4_F4";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N4>, <&kp F4>;
            };

            // 1-tap for the number '5', 2-tap for F5
            n5_f5: td_n5_f5 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N5_F5";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N5>, <&kp F5>;
            };

            // 1-tap for the number '6', 2-tap for F6
            n6_f6: td_n6_f6 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N6_F6";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N6>, <&kp F6>;
            };

            // 1-tap for the number '7', 2-tap for F7
            n7_f7: td_n7_f7 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N7_F7";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N7>, <&kp F7>;
            };

            // 1-tap for the number '8', 2-tap for F8
            n8_f8: td_n8_f8 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N8_F8";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N8>, <&kp F8>;
            };

            // 1-tap for the number '9', 2-tap for F9
            n9_f9: td_n9_f9 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N9_F9";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N9>, <&kp F9>;
            };

            // 1-tap for the number '0', 2-tap for F10
            n0_f10: td_n0_f10 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_N0_F0";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N0>, <&kp F10>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// | '|' |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |  Å  |
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  Æ  |  Ø  |
// |  <  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  -  |  '  |
//              | NEXT |   ESC | LSHFT |   | ENTER | SPACE | BSPC |
//              | PREV | LCRTL |  LGUI |   | RCTRL | ALTGR | FNUM |
                        bindings = <
   &kp daPIPE &kp Q &kp W &kp E &kp R &kp T    &kp Y &kp U  &kp I     &kp O   &kp P       &kp daAA
   &kp TAB    &kp A &kp S &kp D &kp F &kp G    &kp H &kp J  &kp K     &kp L   &kp daAE    &kp daOE
   &kp daLT   &kp Z &kp X &kp C &kp V &kp B    &kp N &kp M  &kp COMMA &kp DOT &kp daMINUS &kp daAPO
             &td0  &mt LCTRL ESC  &shft_gui    &mt RCTRL ENTER  &mt RALT SPACE  &lt LAYER_1 BSPC
                        >;
                };

                layer_1 {
                        label = "FNUM";
// -----------------------------------------------------------------------------------------
// | '½' |   !  |   "  |   #  |   ¤  |   %  |    |  &   |  /   |  (   |  )   |   =   |  ?  |
// | TAB | 1/F1 | 2/F2 | 3/F3 | 4/F4 | 5/F5 |    | 6/F6 | 7/F7 | 8/F8 | 9/F9 | 0/F10 |  +  |
// |  <  |      |   @  |   £  |   $  |      |    |  '   |  {   |  [   |  ]   |  }    |  \  |
//                   | NEXT |   ESC | LSHFT |    | ENTER | SPACE | BSPC |
//                   | PREV | LCRTL |  LGUI |    | RCTRL | ALTGR | FNUM |
                        bindings = <
   &kp daHALF  &kp daEXCL  &kp daDQT  &kp daHASH  &kp daCURR  &kp daPERC    &kp daAMPS  &kp daFSLH  &kp daLPAR  &kp daRPAR  &kp daEQUAL &kp LS(daPLUS)
   &kp TAB     &n1_f1      &n2_f2     &n3_f3      &n4_f4      &n5_f5        &n6_f6      &n7_f7      &n8_f8      &n9_f9      &n0_f10     &kp daPLUS
   &kp daLT    &trans      &kp daAT   &kp daGBP   &kp daUSD   &trans        &kp daAPO   &kp daLBRC  &kp daLBKT  &kp daRBKT  &kp daRBRC  &kp daBSLH
                                         &td1  &mt LCTRL ESC  &shft_gui     &mt RCTRL ENTER  &mt RALT SPACE  &lt LAYER_1 BSPC
                        >;
                };

                layer_2 {
                        label = "BTNAV";
// -----------------------------------------------------------------------------------------
// |  BT1 | BT2 | BT3 | BT4 | BT5 | VOL+ |   |       |     |  ́   |     |     |     |
// |  TAB | BL+ | PGU |  ↑  | PGD | VOL- |   |       |     |  ̈   |     |     |     |
// | BTCLR| BL- |  ←  |  ↓  |  →  | MUTE |   | PRTSC |     |  '  |     |     |     |
//                | NEXT |   ESC | LSHFT |   | ENT   | SPC   | BSPC |
//                | PREV | LCRTL |       |   | RCTRL | ALTGR |      |
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp C_VOL_UP    &trans    &trans &kp daAIGU &trans &trans &trans
   &kp TAB      &kp C_BRI_UP &kp PG_UP    &kp UP       &kp PG_DN    &kp C_VOL_DN    &trans    &trans &kp daUMLA &trans &trans &trans
   &bt BT_CLR   &kp C_BRI_DN &kp LEFT     &kp DOWN     &kp RIGHT    &kp C_MUTE      &kp PSCRN &trans &kp daAPO  &trans &trans &trans
                                                  &td2  &mt LCTRL ESC  &kp LSHFT    &mt RCTRL ENTER  &mt RALT SPACE  &kp BSPC
                        >;
                };

        };
};

