/*
*
* Based on the original layout by Darryl deHaan
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
* Modified by Thomas E. Hansen (CodingCellist)
* Changes licensed under GPLv2
* Copyright (C) 2023 Thomas E. Hansen (CodingCellist)
* SPDX-License-Identifier: GPL-2.0
*
*/

#include <behaviors.dtsi>
#include "da.dtsi"
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS //

#define DEFAULT   0
#define LAYER_1   1
#define LAYER_2   2


// ZMK STUFF //

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};


/ {
        // NEXT and PREV are defined as tap-dances, with one (1) tap meaning
        // "next layer" and two (2) taps meaning "previous layer". This is
        // similar to how some music players do single-button operation.
        // N.B.: care must be taken to make sure the NEXT and PREV mappings go
        // to the right layers and that they wrap around at the top and bottom
        // layers respectively. Additionaly, one must be careful to reference
        // the right tap-dances in their respective layers.
        behaviors {
            td0: tap_dance_0 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LAYER_0";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&to LAYER_1>, <&to LAYER_2>;
                    //         ^ NEXT         ^ PREV
            };

            td1: tap_dance_1 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LAYER_1";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&to LAYER_2>, <&to DEFAULT>;
                    //         ^ NEXT         ^ PREV
            };

            td2: tap_dance_2 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LAYER_2";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&to DEFAULT>, <&to 1>;
                    //         ^ NEXT         ^ PREV
            };

            shft_gui: td_lshft_lgui {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LSHFT_LGUI";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LSHFT>, <&kp LGUI>;
            };

            shft_lsgui: td_lshft_lsgui {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TD_LSHFT_LSLGUI";
                    #binding-cells= <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LSHFT>, <&kp LS(LGUI)>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// | '|' |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |  Å  |
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  Æ  |  Ø  |
// |  <  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  -  |  '  |
//              | NEXT |   ESC | LSHFT |   | ENTER | SPACE | BSPC |
//              | PREV | LCRTL |  LGUI |   | RCTRL | ALTGR | NAV  |
                        bindings = <
   &kp daPIPE &kp Q &kp W &kp E &kp R &kp T    &kp Y &kp U  &kp I     &kp O   &kp P       &kp daAA
   &kp TAB    &kp A &kp S &kp D &kp F &kp G    &kp H &kp J  &kp K     &kp L   &kp daAE    &kp daOE
   &kp daLSTH &kp Z &kp X &kp C &kp V &kp B    &kp N &kp M  &kp COMMA &kp DOT &kp daMINUS &kp daAPO
             &td0  &mt ESC LCTRL  &shft_gui    &mt ENTER RCTRL  &mt SPACE RALT  &lt LAYER_2 BSPC
                        >;
                };

                layer_1 {
                        label = "FNUM";
// -----------------------------------------------------------------------------------------
// | '½' |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 |
// | TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  +  |
// |  <  |     |     |     |     |     |   |     |     |     |     |     |  '  |
//           | NEXT |   ESC |    LSHFT |   | ENTER | SPACE | BSPC |
//           | PREV | LCRTL | LS(LGUI) |   | RCTRL | ALTGR | NAV  |
                        bindings = <
   &kp daHALF &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10 &kp F11
   &kp TAB    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp daPLUS
   &kp daLSTH &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &kp daAPO
                    &td1  &mt ESC LCTRL  &shft_lsgui    &mt ENTER RCTRL  &mt SPACE RALT  &lt LAYER_2 BSPC
                        >;
                };

                layer_2 {
                        label = "BTNAV";
// -----------------------------------------------------------------------------------------
// |  BT1 | BT2 | BT3 | BT4 | BT5 | VOL+ |   |       |     |  ́   |     |     |     |
// |  TAB | BL+ | PGU |  ↑  | PGD | VOL- |   |       |     |  ̈   |     |     |     |
// | BTCLR| BL- |  ←  |  ↓  |  →  | MUTE |   | PRTSC |     |  '  |     |     |     |
//                | NEXT |   ESC | LSHFT |   | ENT   | SPC   | BSPC |
//                | PREV | LCRTL |       |   | RCTRL | ALTGR |      |
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp C_VOL_UP    &trans    &trans &kp daAIGU &trans &trans &trans
   &kp TAB      &kp C_BRI_UP &kp PG_UP    &kp UP       &kp PG_DN    &kp C_VOL_DN    &trans    &trans &kp daUMLA &trans &trans &trans
   &bt BT_CLR   &kp C_BRI_DN &kp LEFT     &kp DOWN     &kp RIGHT    &kp C_MUTE      &kp PSCRN &trans &kp daAPO  &trans &trans &trans
                                                  &td2  &mt ESC LCTRL  &kp LSHFT    &mt ENTER RCTRL  &mt SPACE RALT  &kp BSPC
                        >;
                };

        };
};

